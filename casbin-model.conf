
# Casbin 访问控制模型 (多租户版)
[request_definition]
# 请求定义：sub (subject) - 访问主体, tenant - 租户, obj (object) - 访问资源, act (action) - 访问动作
r = sub, tenant, obj, act

[policy_definition]
# 策略定义：与请求定义保持一致
p = sub, tenant, obj, act

[role_definition]
# 定义角色继承关系
# g(user, role, tenant) 表示用户在指定租户内拥有该角色
# g(user, group, tenant) 表示用户在指定租户内属于该用户组
# g(group, role) 表示用户组拥有该角色
g = _, _, _

[policy_effect]
# 策略效果：表示如果有一条策略匹配，则允许访问
e = some(where (p.eft == allow))

[matchers]
# 匹配器：核心匹配逻辑
# 权限检查逻辑：
# 1. `g(r.sub, p.sub, r.tenant)`: 请求的用户(r.sub)是否直接拥有策略所需角色(p.sub)？
#
# 2. `exists(group, ...)`: 或者，是否存在一个组(group)，使得：
#    a. `g(r.sub, group, r.tenant)`: 请求的用户(r.sub)是这个组(group)的成员。
#    b. `g(group, p.sub, r.tenant)`: 并且这个组(group)拥有策略所需角色(p.sub)。
#
# 3. 租户、资源和动作匹配
m = (g(r.sub, p.sub, r.tenant) || exists(group, g(r.sub, group, r.tenant) && g(group, p.sub, r.tenant))) && r.tenant == p.tenant && r.obj == p.obj && r.act == p.act
